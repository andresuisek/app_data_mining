import React, { useState } from 'react';
import { Form, Select, Row, Col, DatePicker, Typography, Tag, Slider } from 'antd';
import { useForm } from 'antd/es/form/Form';
import { useSendFormDataMutation } from '../baseApi';
import { severity } from '../constants';
import dayjs from 'dayjs';

const { Title } = Typography;
const { Option } = Select;

const dateFormat = 'YYYY/MM/DD';

const VulnerabilityForm = () => {
    const [form] = useForm();
    const [sendFormData] = useSendFormDataMutation();
    const [serverity, setSeverity] = useState(null);
    const [serverityColor, setSeverityColor] = useState('orange');

    const onValuesChange = async (changedValues, allValues) => {
        let values = { ...allValues };

        if (values.date) {
            const date = dayjs(allValues.date);
            values['date_year'] = date.year();
            values['date_month'] = date.month() + 1;
            values['date_day'] = date.date();
            delete values.date;
        }

        try {
            const response = await sendFormData(values).unwrap();
            const severity_value = severity.find(item => item.value === response?.prediction);
            setSeverity(severity_value.label);
            setSeverityColor(severity_value.color);
            console.log("Data sent successfully", response);
        } catch (error) {
            console.error("Failed to send data:", error);
        }
    };

    return (
        <Row justify="center">
            <Col span={12}>
                <Title level={3}>Prediction Form</Title>
                <Form
                    form={form}
                    layout="vertical"
                    onValuesChange={onValuesChange}
                    initialValues={{
                        life_test_result: '',
                        document_check_result: '',
                        facematch_result: 5,
                        date: dayjs('2021/11/03', dateFormat)
                    }}
                >
                    <Row gutter={16}>
                        <Col span={24}>
                            <Form.Item
                                name="life_test_result"
                                label="Liveness Result"
                                rules={[{ required: true, message: 'Please input the Life Test Result!' }]}
                            >
                                <Select>
                                    <Option value="Approved">Approved</Option>
                                    <Option value="Disapproved">Disapproved</Option>
                                </Select>
                            </Form.Item>
                        </Col>
                    </Row>

                    <Row gutter={16}>
                        <Col span={24}>
                            <Form.Item
                                name="document_check_result"
                                label="Document Check Result"
                                rules={[{ required: true, message: 'Please input the Document Check Result!' }]}
                            >
                                <Select>
                                    <Option value="Approved">Approved</Option>
                                    <Option value="Disapproved">Disapproved</Option>
                                </Select>
                            </Form.Item>
                        </Col>
                    </Row>

                    <Row gutter={16}>
                        <Col span={24}>
                            <Form.Item
                                name="facematch_result"
                                label="Facematch Result"
                                rules={[{ required: true, message: 'Please input the Facematch Result!' }]}
                            >
                                <Slider min={0} max={100} step={1} />
                            </Form.Item>
                        </Col>
                    </Row>

                    <Row gutter={16}>
                        <Col span={24}>
                            <Form.Item
                                name="date"
                                label="Date"
                                rules={[{ required: true, message: 'Please select the date!' }]}
                            >
                                <DatePicker style={{ width: '100%' }} format={dateFormat} allowClear={false} />
                            </Form.Item>
                        </Col>
                    </Row>
                </Form>
                <Row justify="center" style={{ marginTop: '20px' }}>
                    <Tag color={serverity ? serverityColor : 'blue'} style={{ fontSize: 'large' }}>
                        {serverity || 'No prediction yet'}
                    </Tag>
                </Row>
            </Col>
        </Row>
    );
};

export default VulnerabilityForm;